/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py:344: SyntaxWarning: invalid escape sequence '\('
  with self.assertRaisesRegex(ConfigurationError, "Configuration value 'Section/IntKey' \('not-an-int'\) is not a valid integer."):
/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py:474: SyntaxWarning: invalid escape sequence '\('
  with self.assertRaisesRegex(ConfigurationError, "Configuration value 'Section/FloatKey' \('not-a-float'\) is not a valid float."):
Configuration value 'Section/BoolKey' ('maybe') is not a valid boolean (use 1/yes/true/on or 0/no/false/off).
FFF....Configuration value 'Section/FloatKey' ('not-a-float') is not a valid float.
F....Configuration value 'Section/IntKey' ('not-an-int') is not a valid integer.
F...Failed to parse configuration file 'test_config.ini': Load failed
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/core/config_manager.py", line 125, in loadConfig
    readFiles: List[str] = self._config.read(self._configFilePath, encoding='utf-8') # Use List
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/unittest/mock.py", line 1134, in __call__
    return self._mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/unittest/mock.py", line 1138, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/unittest/mock.py", line 1193, in _execute_mock_call
    raise effect
configparser.Error: Load failed
Attempted to get config value 'Section/Key' but config file 'test_config.ini' failed to load properly earlier.
F.Required configuration value 'Key' not found in section 'Section'. Checked in 'test_config.ini'.
F.Required configuration value 'RequiredKey' not found in section 'Section'. Checked in 'config.ini'.
.Required configuration value 'RequiredKey' not found in section 'Section'. Checked in 'config.ini'.
....Required environment variable 'REQUIRED_ENV_VAR' is not set.
FRequired environment variable 'REQUIRED_ENV_VAR' is not set.
F.Configuration file not found at specified path: test_config.ini. Proceeding with defaults or environment variables only.
FFFailed to read configuration file 'test_config.ini': Read error
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/core/config_manager.py", line 121, in loadConfig
    if os.path.exists(self._configFilePath):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/unittest/mock.py", line 1134, in __call__
    return self._mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/unittest/mock.py", line 1138, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/unittest/mock.py", line 1193, in _execute_mock_call
    raise effect
OSError: Read error
FFailed to parse configuration file 'test_config.ini': Source contains parsing errors: "Source contains parsing errors: 'Mock parsing error'"
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/core/config_manager.py", line 125, in loadConfig
    readFiles: List[str] = self._config.read(self._configFilePath, encoding='utf-8') # Use List
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/unittest/mock.py", line 1134, in __call__
    return self._mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/unittest/mock.py", line 1138, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/unittest/mock.py", line 1193, in _execute_mock_call
    raise effect
configparser.ParsingError: Source contains parsing errors: "Source contains parsing errors: 'Mock parsing error'"
FFailed to read configuration file 'test_config.ini': Config file exists at 'test_config.ini' but could not be read or parsed by configparser.
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/core/config_manager.py", line 128, in loadConfig
    raise ConfigurationError(f"Config file exists at '{self._configFilePath}' but could not be read or parsed by configparser.")
core.exceptions.ConfigurationError: Config file exists at 'test_config.ini' but could not be read or parsed by configparser.
...env file not found at specified path: .test_env. Skipping environment variable loading from file.
F.env file found at '.test_env' but `load_dotenv` returned False. The file might be empty or have format issues.
FFFailed to load .env file from '.test_env': Permission denied
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/core/config_manager.py", line 73, in loadEnv
    fileExists: bool = os.path.exists(self._envFilePath)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/unittest/mock.py", line 1134, in __call__
    return self._mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/unittest/mock.py", line 1138, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/unittest/mock.py", line 1193, in _execute_mock_call
    raise effect
OSError: Permission denied
F.env file found at '.test_env' but `load_dotenv` returned False. The file might be empty or have format issues.
F.F........F..FF........F.......s..E...F.EE..sEEEssEEEEE
======================================================================
ERROR: test_saveFilesToDisk_invalidPath_traversal_detected_at_save (test_file_processor.TestFileProcessor.test_saveFilesToDisk_invalidPath_traversal_detected_at_save)
Test saving rejects path if realpath resolves outside base dir.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_file_processor.py", line 467, in test_saveFilesToDisk_invalidPath_traversal_detected_at_save
    self.processor.saveFilesToDisk(self.testDir, fileData)
  File "/home/david/devs/ColonelCode/Codebase/core/file_processor.py", line 394, in saveFilesToDisk
    raise FileProcessingError(errMsg)
core.exceptions.FileProcessingError: Skipping file due to unsafe relative path discovered just before saving: '../outside.txt'

======================================================================
ERROR: test_github_handler (unittest.loader._FailedTest.test_github_handler)
----------------------------------------------------------------------
ImportError: Failed to import test module: test_github_handler
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/loader.py", line 394, in _find_test_path
    module = self._get_module_from_name(name)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/unittest/loader.py", line 337, in _get_module_from_name
    __import__(name)
  File "/home/david/devs/ColonelCode/Codebase/tests/test_github_handler.py", line 18, in <module>
    class MockProgress:
  File "/home/david/devs/ColonelCode/Codebase/tests/test_github_handler.py", line 20, in MockProgress
    def update(self, op_code: int, cur_count: Any, max_count: Any = None, message: str = '') -> None: # type: ignore
                                              ^^^
NameError: name 'Any' is not defined. Did you mean: 'any'?


======================================================================
ERROR: test_integration (unittest.loader._FailedTest.test_integration)
----------------------------------------------------------------------
ImportError: Failed to import test module: test_integration
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/loader.py", line 394, in _find_test_path
    module = self._get_module_from_name(name)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/unittest/loader.py", line 337, in _get_module_from_name
    __import__(name)
  File "/home/david/devs/ColonelCode/Codebase/tests/test_integration.py", line 24, in <module>
    from core.llm_interface import LLMInterface
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 14, in <module>
    from google.generativeai.types import GenerationConfig, SafetySetting, HarmCategory, HarmBlockThreshold, ContentDict, PartDict, GenerateContentResponse
ImportError: cannot import name 'SafetySetting' from 'google.generativeai.types' (/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/generativeai/types/__init__.py)


======================================================================
ERROR: test_queryLlmApi_emptyResponseText (test_llm_interface.TestLLMInterface.test_queryLlmApi_emptyResponseText)
Test handling an API response that finishes STOP but has empty/whitespace text.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 551, in queryLlmApi
    response: GenerateContentResponse = model.generate_content(
                                        ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/generativeai/generative_models.py", line 232, in generate_content
    response = self._client.generate_content(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 566, in generate_content
    response = rpc(
               ^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
           ^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
             ^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.InvalidArgument: 400 API key not valid. Please pass a valid API key. [reason: "API_KEY_INVALID"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "generativelanguage.googleapis.com"
}
, locale: "en-US"
message: "API key not valid. Please pass a valid API key."
]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/tests/test_llm_interface.py", line 359, in test_queryLlmApi_emptyResponseText
    self.interface.queryLlmApi(self.apiKey, prompt, self.modelName)
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 652, in queryLlmApi
    except google_exceptions.ResourceExhausted as e: # e.g., Rate limit
TypeError: catching classes that do not inherit from BaseException is not allowed

======================================================================
ERROR: test_queryLlmApi_failure_allRetries (test_llm_interface.TestLLMInterface.test_queryLlmApi_failure_allRetries)
Test LLM API query failure after all retries.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 551, in queryLlmApi
    response: GenerateContentResponse = model.generate_content(
                                        ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/generativeai/generative_models.py", line 232, in generate_content
    response = self._client.generate_content(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 566, in generate_content
    response = rpc(
               ^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
           ^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
             ^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.InvalidArgument: 400 API key not valid. Please pass a valid API key. [reason: "API_KEY_INVALID"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "generativelanguage.googleapis.com"
}
, locale: "en-US"
message: "API key not valid. Please pass a valid API key."
]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/tests/test_llm_interface.py", line 323, in test_queryLlmApi_failure_allRetries
    self.interface.queryLlmApi(self.apiKey, prompt, self.modelName)
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 652, in queryLlmApi
    except google_exceptions.ResourceExhausted as e: # e.g., Rate limit
TypeError: catching classes that do not inherit from BaseException is not allowed

======================================================================
ERROR: test_queryLlmApi_finishReasonOther (test_llm_interface.TestLLMInterface.test_queryLlmApi_finishReasonOther)
Test handling an API response with finish reason OTHER.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 551, in queryLlmApi
    response: GenerateContentResponse = model.generate_content(
                                        ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/generativeai/generative_models.py", line 232, in generate_content
    response = self._client.generate_content(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 566, in generate_content
    response = rpc(
               ^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
           ^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
             ^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.InvalidArgument: 400 API key not valid. Please pass a valid API key. [reason: "API_KEY_INVALID"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "generativelanguage.googleapis.com"
}
, locale: "en-US"
message: "API key not valid. Please pass a valid API key."
]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/tests/test_llm_interface.py", line 373, in test_queryLlmApi_finishReasonOther
    self.interface.queryLlmApi(self.apiKey, prompt, self.modelName)
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 652, in queryLlmApi
    except google_exceptions.ResourceExhausted as e: # e.g., Rate limit
TypeError: catching classes that do not inherit from BaseException is not allowed

======================================================================
ERROR: test_queryLlmApi_missingApiKey (test_llm_interface.TestLLMInterface.test_queryLlmApi_missingApiKey)
Test query attempt with a missing or empty API key.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 551, in queryLlmApi
    response: GenerateContentResponse = model.generate_content(
                                        ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/generativeai/generative_models.py", line 232, in generate_content
    response = self._client.generate_content(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 566, in generate_content
    response = rpc(
               ^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
           ^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
             ^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.InvalidArgument: 400 API key not valid. Please pass a valid API key. [reason: "API_KEY_INVALID"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "generativelanguage.googleapis.com"
}
, locale: "en-US"
message: "API key not valid. Please pass a valid API key."
]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/tests/test_llm_interface.py", line 333, in test_queryLlmApi_missingApiKey
    self.interface.queryLlmApi("ignored_key", "prompt", self.modelName) # apiKey passed but config check fails
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 652, in queryLlmApi
    except google_exceptions.ResourceExhausted as e: # e.g., Rate limit
TypeError: catching classes that do not inherit from BaseException is not allowed

======================================================================
ERROR: test_queryLlmApi_safetyBlock_candidateFinishReason (test_llm_interface.TestLLMInterface.test_queryLlmApi_safetyBlock_candidateFinishReason)
Test handling an API response blocked due to candidate safety (finish reason SAFETY).
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 551, in queryLlmApi
    response: GenerateContentResponse = model.generate_content(
                                        ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/generativeai/generative_models.py", line 232, in generate_content
    response = self._client.generate_content(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 566, in generate_content
    response = rpc(
               ^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
           ^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
             ^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.InvalidArgument: 400 API key not valid. Please pass a valid API key. [reason: "API_KEY_INVALID"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "generativelanguage.googleapis.com"
}
, locale: "en-US"
message: "API key not valid. Please pass a valid API key."
]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/tests/test_llm_interface.py", line 408, in test_queryLlmApi_safetyBlock_candidateFinishReason
    self.interface.queryLlmApi(self.apiKey, prompt, self.modelName)
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 652, in queryLlmApi
    except google_exceptions.ResourceExhausted as e: # e.g., Rate limit
TypeError: catching classes that do not inherit from BaseException is not allowed

======================================================================
ERROR: test_queryLlmApi_safetyBlock_promptFeedback (test_llm_interface.TestLLMInterface.test_queryLlmApi_safetyBlock_promptFeedback)
Test handling an API response blocked due to prompt safety settings.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 551, in queryLlmApi
    response: GenerateContentResponse = model.generate_content(
                                        ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/generativeai/generative_models.py", line 232, in generate_content
    response = self._client.generate_content(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 566, in generate_content
    response = rpc(
               ^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
           ^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
             ^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.InvalidArgument: 400 API key not valid. Please pass a valid API key. [reason: "API_KEY_INVALID"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "generativelanguage.googleapis.com"
}
, locale: "en-US"
message: "API key not valid. Please pass a valid API key."
]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/tests/test_llm_interface.py", line 390, in test_queryLlmApi_safetyBlock_promptFeedback
    self.interface.queryLlmApi(self.apiKey, prompt, self.modelName)
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 652, in queryLlmApi
    except google_exceptions.ResourceExhausted as e: # e.g., Rate limit
TypeError: catching classes that do not inherit from BaseException is not allowed

======================================================================
ERROR: test_queryLlmApi_success_firstTry (test_llm_interface.TestLLMInterface.test_queryLlmApi_success_firstTry)
Test a successful LLM API query on the first attempt.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 551, in queryLlmApi
    response: GenerateContentResponse = model.generate_content(
                                        ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/generativeai/generative_models.py", line 232, in generate_content
    response = self._client.generate_content(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 566, in generate_content
    response = rpc(
               ^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
           ^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
             ^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.InvalidArgument: 400 API key not valid. Please pass a valid API key. [reason: "API_KEY_INVALID"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "generativelanguage.googleapis.com"
}
, locale: "en-US"
message: "API key not valid. Please pass a valid API key."
]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/tests/test_llm_interface.py", line 275, in test_queryLlmApi_success_firstTry
    result_text = self.interface.queryLlmApi(self.apiKey, prompt, self.modelName)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 652, in queryLlmApi
    except google_exceptions.ResourceExhausted as e: # e.g., Rate limit
TypeError: catching classes that do not inherit from BaseException is not allowed

======================================================================
ERROR: test_queryLlmApi_success_onRetry (test_llm_interface.TestLLMInterface.test_queryLlmApi_success_onRetry)
Test a successful LLM API query after one retry.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 551, in queryLlmApi
    response: GenerateContentResponse = model.generate_content(
                                        ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/generativeai/generative_models.py", line 232, in generate_content
    response = self._client.generate_content(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 566, in generate_content
    response = rpc(
               ^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
           ^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
             ^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/.venv/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.InvalidArgument: 400 API key not valid. Please pass a valid API key. [reason: "API_KEY_INVALID"
domain: "googleapis.com"
metadata {
  key: "service"
  value: "generativelanguage.googleapis.com"
}
, locale: "en-US"
message: "API key not valid. Please pass a valid API key."
]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_llm_interface.py", line 309, in test_queryLlmApi_success_onRetry
    result_text = self.interface.queryLlmApi(self.apiKey, prompt, self.modelName)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/core/llm_interface.py", line 652, in queryLlmApi
    except google_exceptions.ResourceExhausted as e: # e.g., Rate limit
TypeError: catching classes that do not inherit from BaseException is not allowed

======================================================================
FAIL: test_getConfigValueBool_invalid (test_config_manager.TestConfigManager.test_getConfigValueBool_invalid)
Test retrieving an invalid boolean config value.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 399, in test_getConfigValueBool_invalid
    self.mock_logger.error.assert_called()
  File "/usr/lib/python3.12/unittest/mock.py", line 913, in assert_called
    raise AssertionError(msg)
AssertionError: Expected 'error' to have been called.

======================================================================
FAIL: test_getConfigValueBool_notFound_required (test_config_manager.TestConfigManager.test_getConfigValueBool_notFound_required)
Test retrieving required non-existent boolean raises error.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 434, in test_getConfigValueBool_notFound_required
    self.mock_logger.error.assert_called()
  File "/usr/lib/python3.12/unittest/mock.py", line 913, in assert_called
    raise AssertionError(msg)
AssertionError: Expected 'error' to have been called.

======================================================================
FAIL: test_getConfigValueBool_notFound_required_fallbackIgnored (test_config_manager.TestConfigManager.test_getConfigValueBool_notFound_required_fallbackIgnored)
Test retrieving required non-existent boolean raises error even with fallback.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 449, in test_getConfigValueBool_notFound_required_fallbackIgnored
    self.mock_logger.error.assert_called()
  File "/usr/lib/python3.12/unittest/mock.py", line 913, in assert_called
    raise AssertionError(msg)
AssertionError: Expected 'error' to have been called.

======================================================================
FAIL: test_getConfigValueFloat_invalid (test_config_manager.TestConfigManager.test_getConfigValueFloat_invalid)
Test retrieving an invalid float config value.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 477, in test_getConfigValueFloat_invalid
    self.mock_logger.error.assert_called_with("Configuration value 'Section/FloatKey' ('not-a-float') is not a valid float.")
  File "/usr/lib/python3.12/unittest/mock.py", line 935, in assert_called_with
    raise AssertionError(error_message)
AssertionError: expected call not found.
Expected: error("Configuration value 'Section/FloatKey' ('not-a-float') is not a valid float.")
  Actual: not called.

======================================================================
FAIL: test_getConfigValueInt_invalid (test_config_manager.TestConfigManager.test_getConfigValueInt_invalid)
Test retrieving an invalid integer config value.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 347, in test_getConfigValueInt_invalid
    self.mock_logger.error.assert_called_with("Configuration value 'Section/IntKey' ('not-an-int') is not a valid integer.")
  File "/usr/lib/python3.12/unittest/mock.py", line 935, in assert_called_with
    raise AssertionError(error_message)
AssertionError: expected call not found.
Expected: error("Configuration value 'Section/IntKey' ('not-an-int') is not a valid integer.")
  Actual: not called.

======================================================================
FAIL: test_getConfigValue_configLoadFailed_accessRaisesError (test_config_manager.TestConfigManager.test_getConfigValue_configLoadFailed_accessRaisesError)
Test retrieving config value after config load failed raises appropriate error.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 328, in test_getConfigValue_configLoadFailed_accessRaisesError
    self.mock_logger.error.assert_called_with(f"Attempted to get config value 'Section/Key' but config file '{self._testIniFileName}' failed to load properly earlier.")
  File "/usr/lib/python3.12/unittest/mock.py", line 935, in assert_called_with
    raise AssertionError(error_message)
AssertionError: expected call not found.
Expected: error("Attempted to get config value 'Section/Key' but config file 'test_config.ini' failed to load properly earlier.")
  Actual: not called.

======================================================================
FAIL: test_getConfigValue_configNotLoaded_required (test_config_manager.TestConfigManager.test_getConfigValue_configNotLoaded_required)
Test required config value retrieval fails correctly if config wasn't loaded.
----------------------------------------------------------------------
core.exceptions.ConfigurationError: Required configuration value 'Key' not found in section 'Section'. Checked in 'test_config.ini'.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 310, in test_getConfigValue_configNotLoaded_required
    with self.assertRaisesRegex(ConfigurationError, expected_regex):
AssertionError: "Required configuration value 'Key' not found in section 'Section'\. Config file 'test_config.ini' not found or not loaded successfully\." does not match "Required configuration value 'Key' not found in section 'Section'. Checked in 'test_config.ini'."

======================================================================
FAIL: test_getEnvVar_notFound_required (test_config_manager.TestConfigManager.test_getEnvVar_notFound_required)
Test retrieving a required, non-existent env var.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 222, in test_getEnvVar_notFound_required
    self.mock_logger.error.assert_called_with("Required environment variable 'REQUIRED_ENV_VAR' is not set.")
  File "/usr/lib/python3.12/unittest/mock.py", line 935, in assert_called_with
    raise AssertionError(error_message)
AssertionError: expected call not found.
Expected: error("Required environment variable 'REQUIRED_ENV_VAR' is not set.")
  Actual: not called.

======================================================================
FAIL: test_getEnvVar_notFound_required_withDefault (test_config_manager.TestConfigManager.test_getEnvVar_notFound_required_withDefault)
Test required=True takes precedence over defaultValue.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 230, in test_getEnvVar_notFound_required_withDefault
    self.mock_logger.error.assert_called_with("Required environment variable 'REQUIRED_ENV_VAR' is not set.")
  File "/usr/lib/python3.12/unittest/mock.py", line 935, in assert_called_with
    raise AssertionError(error_message)
AssertionError: expected call not found.
Expected: error("Required environment variable 'REQUIRED_ENV_VAR' is not set.")
  Actual: not called.

======================================================================
FAIL: test_loadConfig_fileNotFound (test_config_manager.TestConfigManager.test_loadConfig_fileNotFound)
Test loading when .ini file does not exist.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 148, in test_loadConfig_fileNotFound
    self.mock_logger.warning.assert_called_with(f"Configuration file not found at specified path: {self._testIniFileName}. Proceeding with defaults or environment variables only.")
  File "/usr/lib/python3.12/unittest/mock.py", line 935, in assert_called_with
    raise AssertionError(error_message)
AssertionError: expected call not found.
Expected: warning('Configuration file not found at specified path: test_config.ini. Proceeding with defaults or environment variables only.')
  Actual: not called.

======================================================================
FAIL: test_loadConfig_noPathSpecified (test_config_manager.TestConfigManager.test_loadConfig_noPathSpecified)
Test behavior when no .ini file path is provided.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 191, in test_loadConfig_noPathSpecified
    self.mock_logger.info.assert_called_with("No configuration file path specified. Relying on defaults or environment variables.")
  File "/usr/lib/python3.12/unittest/mock.py", line 935, in assert_called_with
    raise AssertionError(error_message)
AssertionError: expected call not found.
Expected: info('No configuration file path specified. Relying on defaults or environment variables.')
  Actual: not called.

======================================================================
FAIL: test_loadConfig_osErrorOnExists (test_config_manager.TestConfigManager.test_loadConfig_osErrorOnExists)
Test handling OS error when checking if .ini file exists.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 181, in test_loadConfig_osErrorOnExists
    self.mock_logger.error.assert_called()
  File "/usr/lib/python3.12/unittest/mock.py", line 913, in assert_called
    raise AssertionError(msg)
AssertionError: Expected 'error' to have been called.

======================================================================
FAIL: test_loadConfig_parseError (test_config_manager.TestConfigManager.test_loadConfig_parseError)
Test handling of configparser parsing errors.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 161, in test_loadConfig_parseError
    self.mock_logger.error.assert_called()
  File "/usr/lib/python3.12/unittest/mock.py", line 913, in assert_called
    raise AssertionError(msg)
AssertionError: Expected 'error' to have been called.

======================================================================
FAIL: test_loadEnv_fileNotFound (test_config_manager.TestConfigManager.test_loadEnv_fileNotFound)
Test loading when .env file does not exist.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 82, in test_loadEnv_fileNotFound
    self.mock_logger.warning.assert_called_with(f".env file not found at specified path: {self._testEnvFileName}. Skipping environment variable loading from file.")
  File "/usr/lib/python3.12/unittest/mock.py", line 935, in assert_called_with
    raise AssertionError(error_message)
AssertionError: expected call not found.
Expected: warning('.env file not found at specified path: .test_env. Skipping environment variable loading from file.')
  Actual: not called.

======================================================================
FAIL: test_loadEnv_loadReturnsFalse (test_config_manager.TestConfigManager.test_loadEnv_loadReturnsFalse)
Test loading when .env file exists but load_dotenv returns False.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 109, in test_loadEnv_loadReturnsFalse
    mock_load_dotenv.assert_called_once_with(dotenv_path=self._testEnvFileName, override=False, verbose=True)
  File "/usr/lib/python3.12/unittest/mock.py", line 955, in assert_called_once_with
    raise AssertionError(msg)
AssertionError: Expected 'load_dotenv' to be called once. Called 0 times.

======================================================================
FAIL: test_loadEnv_noPathSpecified (test_config_manager.TestConfigManager.test_loadEnv_noPathSpecified)
Test behavior when no .env file path is provided.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 95, in test_loadEnv_noPathSpecified
    self.mock_logger.info.assert_called_with("No .env file path specified. Skipping loading from .env file.")
  File "/usr/lib/python3.12/unittest/mock.py", line 935, in assert_called_with
    raise AssertionError(error_message)
AssertionError: expected call not found.
Expected: info('No .env file path specified. Skipping loading from .env file.')
  Actual: not called.

======================================================================
FAIL: test_loadEnv_osErrorOnExists (test_config_manager.TestConfigManager.test_loadEnv_osErrorOnExists)
Test handling OS error when checking if .env file exists.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 121, in test_loadEnv_osErrorOnExists
    self.mock_logger.error.assert_called() # Check that error was logged
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/unittest/mock.py", line 913, in assert_called
    raise AssertionError(msg)
AssertionError: Expected 'error' to have been called.

======================================================================
FAIL: test_loadEnv_success (test_config_manager.TestConfigManager.test_loadEnv_success)
Test successful loading of an existing .env file.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_config_manager.py", line 64, in test_loadEnv_success
    self.assertTrue(result, "loadEnv should return True on success")
AssertionError: False is not true : loadEnv should return True on success

======================================================================
FAIL: test_extractCodeBlock_differentLanguage_no_match (test_file_processor.TestFileProcessor.test_extractCodeBlock_differentLanguage_no_match)
Test requesting 'json' when only 'python' block exists using regex fallback.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/tests/test_file_processor.py", line 149, in test_extractCodeBlock_differentLanguage_no_match
    self.mock_logger.info.assert_any_call("Successfully extracted 'generic (fallback)' code block using generic regex fallback. Length: 10")
  File "/usr/lib/python3.12/unittest/mock.py", line 1015, in assert_any_call
    raise AssertionError(
AssertionError: info("Successfully extracted 'generic (fallback)' code block using generic regex fallback. Length: 10") call not found

======================================================================
FAIL: test_extractCodeBlock_specific_lang_requested_falls_back_to_generic (test_file_processor.TestFileProcessor.test_extractCodeBlock_specific_lang_requested_falls_back_to_generic)
Test requesting specific language finds generic block if specific fails.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/tests/test_file_processor.py", line 91, in test_extractCodeBlock_specific_lang_requested_falls_back_to_generic
    self.mock_logger.warning.assert_any_call("Could not find fenced code block using line search. Attempting regex fallback...")
  File "/usr/lib/python3.12/unittest/mock.py", line 1015, in assert_any_call
    raise AssertionError(
AssertionError: warning('Could not find fenced code block using line search. Attempting regex fallback...') call not found

======================================================================
FAIL: test_is_safe_relative_path_invalid_absolute_win (test_file_processor.TestFileProcessor.test_is_safe_relative_path_invalid_absolute_win)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/tests/test_file_processor.py", line 178, in test_is_safe_relative_path_invalid_absolute_win
    self.assertFalse(self.processor._is_safe_relative_path("C:\\Windows"))
AssertionError: True is not false

======================================================================
FAIL: test_is_safe_relative_path_invalid_chars (test_file_processor.TestFileProcessor.test_is_safe_relative_path_invalid_chars)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/tests/test_file_processor.py", line 213, in test_is_safe_relative_path_invalid_chars
    self.mock_logger.warning.assert_called_with("Path validation failed: Path 'file\\x00name.txt' contains invalid character ('\\x00').")
  File "/usr/lib/python3.12/unittest/mock.py", line 944, in assert_called_with
    raise AssertionError(_error_message()) from cause
AssertionError: expected call not found.
Expected: warning("Path validation failed: Path 'file\\x00name.txt' contains invalid character ('\\x00').")
  Actual: warning("Path validation failed: Path 'file\x00name.txt' contains invalid character ('\\x00').")

======================================================================
FAIL: test_parseStructuredOutput_json_wrongStructure_badKeys_type (test_file_processor.TestFileProcessor.test_parseStructuredOutput_json_wrongStructure_badKeys_type)
Test parsing JSON dict with non-string keys.
----------------------------------------------------------------------
core.exceptions.ParsingError: Invalid structure: Dictionary key '123' is not a safe relative path.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/david/devs/ColonelCode/Codebase/tests/test_file_processor.py", line 253, in test_parseStructuredOutput_json_wrongStructure_badKeys_type
    with self.assertRaisesRegex(ParsingError, "Invalid structure: Dictionary key 123 is not a safe relative path."):
AssertionError: "Invalid structure: Dictionary key 123 is not a safe relative path." does not match "Invalid structure: Dictionary key '123' is not a safe relative path."

======================================================================
FAIL: test_saveFilesToDisk_success (test_file_processor.TestFileProcessor.test_saveFilesToDisk_success)
Test saving multiple files successfully.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.12/unittest/mock.py", line 1390, in patched
    return func(*newargs, **newkeywargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/david/devs/ColonelCode/Codebase/tests/test_file_processor.py", line 393, in test_saveFilesToDisk_success
    mock_realpath.assert_any_call(os.path.normpath(os.path.join(base_dir, "subdir", "file3.win")))
  File "/usr/lib/python3.12/unittest/mock.py", line 1015, in assert_any_call
    raise AssertionError(
AssertionError: realpath('/home/david/devs/ColonelCode/Codebase/fake/repo/path/subdir/file3.win') call not found

----------------------------------------------------------------------
Ran 94 tests in 11.015s

FAILED (failures=24, errors=11, skipped=4)
